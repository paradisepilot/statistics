
R version 2.15.1 (2012-06-22) -- "Roasted Marshmallows"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(MASS);
> 
> data(Rubber);
> dim(Rubber);
[1] 30  3
> summary(Rubber);
      loss            hard            tens      
 Min.   : 32.0   Min.   :45.00   Min.   :119.0  
 1st Qu.:113.2   1st Qu.:60.25   1st Qu.:151.0  
 Median :165.0   Median :71.00   Median :176.5  
 Mean   :175.4   Mean   :70.27   Mean   :180.5  
 3rd Qu.:220.5   3rd Qu.:81.00   3rd Qu.:210.0  
 Max.   :372.0   Max.   :89.00   Max.   :237.0  
> 
> ### (a) ############################################################################################
> 
> # (*)  Notice how large the standard error is for (Intercept).
> LM.Rubber.3rd <- lm(
+    formula = loss ~ I(tens^3) + I((tens^2) * hard) + I(tens * (hard^2)) + I(hard^3) + I(tens^2) + I(tens*hard) + I(hard^2) + I(tens) + I(hard),
+    data    = Rubber
+    );
> summary(LM.Rubber.3rd);

Call:
lm(formula = loss ~ I(tens^3) + I((tens^2) * hard) + I(tens * 
    (hard^2)) + I(hard^3) + I(tens^2) + I(tens * hard) + I(hard^2) + 
    I(tens) + I(hard), data = Rubber)

Residuals:
    Min      1Q  Median      3Q     Max 
-60.880 -15.307   2.958  14.784  48.695 

Coefficients:
                     Estimate Std. Error t value Pr(>|t|)
(Intercept)        -6.040e+02  4.543e+03  -0.133    0.896
I(tens^3)           3.384e-04  2.788e-04   1.214    0.239
I((tens^2) * hard) -7.527e-05  9.350e-04  -0.081    0.937
I(tens * (hard^2))  2.469e-03  1.675e-03   1.474    0.156
I(hard^3)          -4.736e-03  3.897e-03  -1.215    0.238
I(tens^2)          -1.572e-01  2.081e-01  -0.755    0.459
I(tens * hard)     -2.924e-01  5.085e-01  -0.575    0.572
I(hard^2)           4.968e-01  7.613e-01   0.653    0.521
I(tens)             3.123e+01  5.295e+01   0.590    0.562
I(hard)            -1.240e+01  7.213e+01  -0.172    0.865

Residual standard error: 28.22 on 20 degrees of freedom
Multiple R-squared: 0.9292,	Adjusted R-squared: 0.8973 
F-statistic: 29.16 on 9 and 20 DF,  p-value: 1.373e-09 

> 
> 
> # ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
> # (*)  Dropping I((tens^2) * hard).  The standard error for (Intercept) is still very large.
> LM.Rubber.01 <- lm(
+    formula = loss ~ I(tens^3) + I(tens * (hard^2)) + I(hard^3) + I(tens^2) + I(tens*hard) + I(hard^2) + I(tens) + I(hard),
+    data    = Rubber
+    );
> summary(LM.Rubber.01);

Call:
lm(formula = loss ~ I(tens^3) + I(tens * (hard^2)) + I(hard^3) + 
    I(tens^2) + I(tens * hard) + I(hard^2) + I(tens) + I(hard), 
    data = Rubber)

Residuals:
    Min      1Q  Median      3Q     Max 
-60.298 -14.934   3.096  15.266  48.709 

Coefficients:
                     Estimate Std. Error t value Pr(>|t|)  
(Intercept)        -9.349e+02  1.890e+03  -0.495   0.6261  
I(tens^3)           3.545e-04  1.906e-04   1.860   0.0770 .
I(tens * (hard^2))  2.536e-03  1.419e-03   1.787   0.0884 .
I(hard^3)          -4.780e-03  3.766e-03  -1.269   0.2182  
I(tens^2)          -1.715e-01  1.060e-01  -1.618   0.1207  
I(tens * hard)     -3.299e-01  1.993e-01  -1.655   0.1127  
I(hard^2)           4.927e-01  7.414e-01   0.665   0.5136  
I(tens)             3.520e+01  1.910e+01   1.843   0.0795 .
I(hard)            -8.602e+00  5.324e+01  -0.162   0.8732  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 27.55 on 21 degrees of freedom
Multiple R-squared: 0.9292,	Adjusted R-squared: 0.9022 
F-statistic: 34.44 on 8 and 21 DF,  p-value: 2.237e-10 

> 
> 
> # ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
> # (*)  Dropping I(hard).  The standard error for (Intercept) is still very large.
> LM.Rubber.02 <- lm(
+    formula = loss ~ I(tens^3) + I(tens * (hard^2)) + I(hard^3) + I(tens^2) + I(tens*hard) + I(hard^2) + I(tens),
+    data    = Rubber
+    );
> summary(LM.Rubber.02);

Call:
lm(formula = loss ~ I(tens^3) + I(tens * (hard^2)) + I(hard^3) + 
    I(tens^2) + I(tens * hard) + I(hard^2) + I(tens), data = Rubber)

Residuals:
    Min      1Q  Median      3Q     Max 
-60.074 -15.725   2.946  14.057  48.952 

Coefficients:
                     Estimate Std. Error t value Pr(>|t|)  
(Intercept)        -1.185e+03  1.061e+03  -1.116   0.2764  
I(tens^3)           3.612e-04  1.818e-04   1.987   0.0595 .
I(tens * (hard^2))  2.638e-03  1.245e-03   2.118   0.0457 *
I(hard^3)          -4.308e-03  2.323e-03  -1.854   0.0772 .
I(tens^2)          -1.752e-01  1.012e-01  -1.731   0.0975 .
I(tens * hard)     -3.436e-01  1.763e-01  -1.949   0.0642 .
I(hard^2)           3.803e-01  2.516e-01   1.512   0.1448  
I(tens)             3.630e+01  1.742e+01   2.084   0.0490 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 26.93 on 22 degrees of freedom
Multiple R-squared: 0.9291,	Adjusted R-squared: 0.9065 
F-statistic: 41.18 on 7 and 22 DF,  p-value: 3.356e-11 

> 
> 
> # ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
> # (*)  Dropping I(1).
> LM.Rubber.03 <- lm(
+    formula = loss ~ -1 + I(tens^3) + I(tens * (hard^2)) + I(hard^3) + I(tens^2) + I(tens*hard) + I(hard^2) + I(tens),
+    data    = Rubber
+    );
> summary(LM.Rubber.03);

Call:
lm(formula = loss ~ -1 + I(tens^3) + I(tens * (hard^2)) + I(hard^3) + 
    I(tens^2) + I(tens * hard) + I(hard^2) + I(tens), data = Rubber)

Residuals:
    Min      1Q  Median      3Q     Max 
-55.587 -11.542   4.629  14.395  57.668 

Coefficients:
                     Estimate Std. Error t value Pr(>|t|)    
I(tens^3)           1.736e-04  6.972e-05   2.490   0.0204 *  
I(tens * (hard^2))  2.771e-03  1.246e-03   2.223   0.0363 *  
I(hard^3)          -4.558e-03  2.325e-03  -1.960   0.0622 .  
I(tens^2)          -7.024e-02  3.769e-02  -1.864   0.0752 .  
I(tens * hard)     -3.521e-01  1.771e-01  -1.988   0.0588 .  
I(hard^2)           3.920e-01  2.527e-01   1.551   0.1345    
I(tens)             1.701e+01  2.190e+00   7.768 7.08e-08 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 27.07 on 23 degrees of freedom
Multiple R-squared: 0.9853,	Adjusted R-squared: 0.9808 
F-statistic: 220.5 on 7 and 23 DF,  p-value: < 2.2e-16 

> 
> 
> # ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
> # (*)  Dropping I(hard^2).
> LM.Rubber.04 <- lm(
+    formula = loss ~ -1 + I(tens^3) + I(tens * (hard^2)) + I(hard^3) + I(tens^2) + I(tens*hard) + I(tens),
+    data    = Rubber
+    );
> summary(LM.Rubber.04);

Call:
lm(formula = loss ~ -1 + I(tens^3) + I(tens * (hard^2)) + I(hard^3) + 
    I(tens^2) + I(tens * hard) + I(tens), data = Rubber)

Residuals:
    Min      1Q  Median      3Q     Max 
-56.512 -12.656   4.415  12.057  59.316 

Coefficients:
                     Estimate Std. Error t value Pr(>|t|)    
I(tens^3)           2.621e-04  4.129e-05   6.347 1.46e-06 ***
I(tens * (hard^2))  8.920e-04  3.027e-04   2.947  0.00704 ** 
I(hard^3)          -9.594e-04  1.616e-04  -5.936 3.99e-06 ***
I(tens^2)          -1.227e-01  1.706e-02  -7.196 1.95e-07 ***
I(tens * hard)     -8.237e-02  3.466e-02  -2.377  0.02580 *  
I(tens)             1.774e+01  2.201e+00   8.063 2.75e-08 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 27.86 on 24 degrees of freedom
Multiple R-squared: 0.9838,	Adjusted R-squared: 0.9797 
F-statistic: 242.6 on 6 and 24 DF,  p-value: < 2.2e-16 

> 
> 
> # ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
> AIC(
+ 	LM.Rubber.01,
+ 	LM.Rubber.02,
+ 	LM.Rubber.03,
+ 	LM.Rubber.04
+ 	);
             df      AIC
LM.Rubber.01 10 293.3917
LM.Rubber.02  9 291.4289
LM.Rubber.03  8 291.0817
LM.Rubber.04  7 292.0669
> 
> 
> # ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
> anova(LM.Rubber.04,LM.Rubber.03);
Analysis of Variance Table

Model 1: loss ~ -1 + I(tens^3) + I(tens * (hard^2)) + I(hard^3) + I(tens^2) + 
    I(tens * hard) + I(tens)
Model 2: loss ~ -1 + I(tens^3) + I(tens * (hard^2)) + I(hard^3) + I(tens^2) + 
    I(tens * hard) + I(hard^2) + I(tens)
  Res.Df   RSS Df Sum of Sq      F Pr(>F)
1     24 18624                           
2     23 16860  1      1764 2.4064 0.1345
> anova(LM.Rubber.04,LM.Rubber.02);
Analysis of Variance Table

Model 1: loss ~ -1 + I(tens^3) + I(tens * (hard^2)) + I(hard^3) + I(tens^2) + 
    I(tens * hard) + I(tens)
Model 2: loss ~ I(tens^3) + I(tens * (hard^2)) + I(hard^3) + I(tens^2) + 
    I(tens * hard) + I(hard^2) + I(tens)
  Res.Df   RSS Df Sum of Sq      F Pr(>F)
1     24 18624                           
2     22 15956  2    2667.7 1.8391 0.1826
> anova(LM.Rubber.04,LM.Rubber.01);
Analysis of Variance Table

Model 1: loss ~ -1 + I(tens^3) + I(tens * (hard^2)) + I(hard^3) + I(tens^2) + 
    I(tens * hard) + I(tens)
Model 2: loss ~ I(tens^3) + I(tens * (hard^2)) + I(hard^3) + I(tens^2) + 
    I(tens * hard) + I(hard^2) + I(tens) + I(hard)
  Res.Df   RSS Df Sum of Sq      F Pr(>F)
1     24 18624                           
2     21 15937  3    2687.5 1.1805  0.341
> 
> 
> # ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
> LM.Rubber.A <- lm(
+    formula = loss ~ tens : hard,
+    data    = Rubber
+    );
> summary(LM.Rubber.A);

Call:
lm(formula = loss ~ tens:hard, data = Rubber)

Residuals:
     Min       1Q   Median       3Q      Max 
-162.334  -21.303    5.992   38.289   68.199 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept) 482.591375  45.019684  10.720 2.03e-11 ***
tens:hard    -0.024471   0.003499  -6.993 1.32e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 54.09 on 28 degrees of freedom
Multiple R-squared: 0.6359,	Adjusted R-squared: 0.6229 
F-statistic:  48.9 on 1 and 28 DF,  p-value: 1.324e-07 

> 
> 
> # ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
> LM.Rubber.B <- lm(
+    formula = loss ~ I(tens * hard),
+    data    = Rubber
+    );
> summary(LM.Rubber.B);

Call:
lm(formula = loss ~ I(tens * hard), data = Rubber)

Residuals:
     Min       1Q   Median       3Q      Max 
-162.334  -21.303    5.992   38.289   68.199 

Coefficients:
                 Estimate Std. Error t value Pr(>|t|)    
(Intercept)    482.591375  45.019684  10.720 2.03e-11 ***
I(tens * hard)  -0.024471   0.003499  -6.993 1.32e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 54.09 on 28 degrees of freedom
Multiple R-squared: 0.6359,	Adjusted R-squared: 0.6229 
F-statistic:  48.9 on 1 and 28 DF,  p-value: 1.324e-07 

> 
> 
> # ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
> LM.Rubber.C <- lm(
+    formula = loss ~ tens + hard + tens : hard,
+    data    = Rubber
+    );
> summary(LM.Rubber.C);

Call:
lm(formula = loss ~ tens + hard + tens:hard, data = Rubber)

Residuals:
    Min      1Q  Median      3Q     Max 
-79.059 -19.489   2.956  22.489  63.272 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept) 1204.31373  219.01424   5.499 9.06e-06 ***
tens          -3.21008    1.22584  -2.619 0.014530 *  
hard         -10.92005    2.92517  -3.733 0.000934 ***
tens:hard      0.02531    0.01670   1.516 0.141623    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 35.64 on 26 degrees of freedom
Multiple R-squared: 0.8532,	Adjusted R-squared: 0.8363 
F-statistic: 50.37 on 3 and 26 DF,  p-value: 5.716e-11 

> 
> 
> # ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
> LM.Rubber.D <- lm(
+    formula = loss ~ tens + hard + I(tens * hard),
+    data    = Rubber
+    );
> summary(LM.Rubber.D);

Call:
lm(formula = loss ~ tens + hard + I(tens * hard), data = Rubber)

Residuals:
    Min      1Q  Median      3Q     Max 
-79.059 -19.489   2.956  22.489  63.272 

Coefficients:
                 Estimate Std. Error t value Pr(>|t|)    
(Intercept)    1204.31373  219.01424   5.499 9.06e-06 ***
tens             -3.21008    1.22584  -2.619 0.014530 *  
hard            -10.92005    2.92517  -3.733 0.000934 ***
I(tens * hard)    0.02531    0.01670   1.516 0.141623    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 35.64 on 26 degrees of freedom
Multiple R-squared: 0.8532,	Adjusted R-squared: 0.8363 
F-statistic: 50.37 on 3 and 26 DF,  p-value: 5.716e-11 

> 
> 
> # ~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
> LM.Rubber.E <- lm(
+    formula = loss ~ tens * hard,
+    data    = Rubber
+    );
> summary(LM.Rubber.E);

Call:
lm(formula = loss ~ tens * hard, data = Rubber)

Residuals:
    Min      1Q  Median      3Q     Max 
-79.059 -19.489   2.956  22.489  63.272 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept) 1204.31373  219.01424   5.499 9.06e-06 ***
tens          -3.21008    1.22584  -2.619 0.014530 *  
hard         -10.92005    2.92517  -3.733 0.000934 ***
tens:hard      0.02531    0.01670   1.516 0.141623    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 35.64 on 26 degrees of freedom
Multiple R-squared: 0.8532,	Adjusted R-squared: 0.8363 
F-statistic: 50.37 on 3 and 26 DF,  p-value: 5.716e-11 

> 
> 
> q();
